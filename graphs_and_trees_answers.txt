1. What is a binary tree and what makes it unique to other trees?

A binary tree is a data structure where each Node can have up to two child Nodes, one on the left and one on the right. The Root Node is at the tope, and they grown down. Nodes can have left and right nodes below it, these are called children. Nodes with no more children are called a leaf node.


2. What is a heuristic?

"A heuristic is a technique designed for solving a problem more quickly when classic methods are too slow, or for finding an approximate solution when classic methods fail to find any exact solution." source Wikipedia

This is when you use your best guess to solve a problem, and the check if it's correct. Because it's a best guess you sacrifice accuracy in favor of solving a complex problem quicker.

3. What is another problem besides the shortest-path problem that requires the use of heuristics?

Simpler problem - solving a simpler, smaller problem where the solution is also a solution to the initial problem

Search - instead of trying out each possible step, try to eliminate the bad paths early.  

4. What is the difference between a depth-first search and a breadth-first search?

Depth-first search conducts the search from the root to a leaf, one branch at a time.

Breadth-first search searches an entire row of nodes before proceeding to the next row.

5. Explain in your own words what an undirected, a-cyclic, unweighted graph is.

A graph that connects each node both ways, without forming any loops, and that doesn't assign the cost of travel between nodes.

6. What kind of graph is a binary search tree?

Depending on the data, a binary search tree can be weighted or unweighted with an A-cyclic, and undirected graph.

7. Given a Binary Search Tree and a value, write a function that checks to see whether the value exists within the tree.

Example: The value 10 exists in the tree. The value 23 does not exist in the tree.

(PLAN)

Create a node class

	Have constructors on the node class for data, left and right

Create a binary tree class

	Have a constructor on the binary tree for root

	Create an add function so that we can add the nodes in the given example, taking in data
		IF node is null - 
			the root is the new node
		ESLE we need to decide where to create the new done so we create a recursive search function named searchTree

	Create a lookup function to see if a given data value is in the tree

		set the current to the root
			If the given value is current data 
				return true
			Else
				if the given value is less than the current data
					set current to the left child node
				else the given value is greater than the current data
					set the current to the right child node
			if none of the above is true - then return false

8. Given a Binary Search Tree and two nodes, n1 and n2, write a function that finds the distance between the two nodes.

Example: The distance between the nodes 4 and 10 is 4. The distance between the nodes 8 and 10 is 1. The distance between the nodes 1 and 14 is 4.